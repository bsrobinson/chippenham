; Global settings never change
UseArticles = 1
NewStyle = 1

; Festival
FestName = 
ShortName = 
FestBankAdr = "Name of Bank"
FestBankSortCode = 
FestBankAccountNum = 
FestLegalName = Chippenham Folk Festival CIC
FestLegalAddr[] = The Cause Music and Arts Centre
FestLegalAddr[] = The Causeway
FestLegalAddr[] = Chippenham
FestLegalAddr[] = Wiltshire
FestLegalAddr[] = SN15 3DD
FestPhone = 
FestHomeName = Chippenham
PlanYear = 2023
ShowYear = 2023
HostURL = 

; Trade
AutoInvoices = 1
PaymentTerms = 30 ; Days to pay an invoice
TradeInvoicePay = 1
CopyTradeEmailsTo = Treasurer
CopyTradeEmailsName = 
TradeDateChange = 1


; Dance
DanceComp = 0
DanceDefaultSlot = 30
Procession = Parade ; What it is called Procession or Parade or ...
ProcessDays = 10; Bit map of days 1=Fri, 2=Sat, 4=Sun, 8 = Mon
DanceNeedInsurance = 1
DanceNeedPerformers = 
DanceNeedAddress = 
DanceNeedMobile = 
DanceNeedDays = 
DanceOrg = Dance Team
DanceSpecialMessage = Link Error
AllDanceTimes = 1
RestrictOneProcession = 1 ; If set allow only one

; Music and other types

; Volunteers
VolDBS = 1
VolFirstAid = 1
Vol_Children = 1
Vol_Camping = 1
VolPhoto = 1 ; 1 = may, 2 = Must

; Maps 
MapLat = 51.46017
MapLong = -2.11478
MapStartZoom = 16
DefaultDirLat = 51.45925
DefaultDirLong = -2.11694
DirectionDefault = Bridge
GoogleAPI = 
FoodCenter = 78 ; Map center -ve Mappoint, +ve Venue

; Social Media
Twitter = chippfolk
Facebook = chippfolk
Instagram = chippfolk
YouTube = channel/UCIYtKQPRs4tvLiBKcmfj86g

; Other Things

; Camping style: 0 No Camp,1 Set by Perf,2 Set by Fest, 3 = chip
CampControl = 3
PayByCheque = 2; 0 = No, 1 = Yes, 2 = Last Year

; Email - If no domain fest url added, if USER then user's email is used
EmailReplyTo = No-Reply@example.com ; Default
DanceEmailsFrom = Displays
MusicEmailsFrom = concerts
FamilyEmailsFrom = Family.Festival
CeilidhEmailsFrom = USER
OtherEmailsFrom = USER
FestContractEmail = Bookkeeper@Chippfolk.co.uk
SMTPuser = 
SMTPpwd = 
EmailButtons = 0


; Layout
FooterBack = Black
PaperColouredEvents = BlackDayTab
PerformerBanners = 0
FreeText = Donation
NoEventsPre = "We are working on announcements for"
NoEventsPost = "<br>Please check our social media sites for the very latest news. Thanks"
ShowContactPhotos = 1
WebsiteBanner = /images/icons/DefaultLogo.png
WebsiteBanner2 = /images/icons/DefaultLogo.png
DefaultPageBanner = /images/icons/ChipBan1440.png
LookBackYears = 5
SponsorTime = 1000

; Contracts
DefaultReport = Artists Reception
DefaultReportPoint = -34
ContractType = Chip2023
PublicLiability = 1
PerfTickets = 2
PerformerTickets = Chip


; Other things

RealFaviconGeneratorKey = f37486a840ed5befdbe6934c876387a419cad120
MailChimp_apikey = 
MailChimp_listid = 
MailChimp_server = 
NotAllPublic = 0 ; Set to 1 to display warning that not all events public
Donate = 0
NewPhotos = 1
SpecialInvite = 1
CollectingPosn = 10


